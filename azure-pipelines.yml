# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- azure-pipelines

pr: none

variables:
- group: Passwords

pool:
  vmImage: 'macOS-10.15'

resources:
  containers:
  - container: node_slim
    image: node:11.12-slim

jobs:
#- job: Build_for_IOs
#    
#  steps:
#  - script: |
#      sudo xcode-select -switch /Applications/Xcode_11.3.1.app
#      mkdir -p /Users/runner/.cocoapods/repos/ 
#      wget https://github.com/CocoaPods/Specs/archive/master.zip 
#      echo "##########  UNZIPPING FILES  ##########"
#      unzip -qq master.zip
#      echo -n "##########  MOVING TO NEW FOLDER  ##########"
#      mv Specs-master/Specs  /Users/runner/.cocoapods/repos/
#    displayName: Add repo 
#
#  - script: |
#      npm install cordova
#      ./node_modules/cordova/bin/cordova create test-project
#    displayName: Create test project for IOS
#
#  - script: |
#      cd test-project 
#      ./../node_modules/cordova/bin/cordova platform add ios@5.0.1
#      ./../node_modules/cordova/bin/cordova plugin add situm-cordova-plugin-wayfinding
#    displayName: Add iOS and plugin
#
#  - script: |
#      sudo xcode-select -switch /Applications/Xcode_11.3.1.app
#      cd test-project/ && ./../node_modules/cordova/bin/cordova build ios
#    displayName: Build iOS platform

- job: Build_for_Android

  steps:
  - script: |
       npm install cordova
       ./node_modules/cordova/bin/cordova create test-project
    displayName: Create test project for Android
  - script: |
       cd test-project 
       ./../node_modules/cordova/bin/cordova platform add android@8.0.0
       ./../node_modules/cordova/bin/cordova plugin add situm-cordova-plugin-wayfinding
    displayName: Add Android and plugin
  - script: |
       cd test-project
       #sed -i '$ d' config.xml
       echo '<preference name="GOOGLE_MAPS_ANDROID_API_KEY" value="YOUR_GOOGLE_MAPS_ANDROID_KEY"/></widget>' >> config.xml
       source ~/.bash_profile && ./../node_modules/cordova/bin/cordova build android
    displayName: Build Android

#- job: Build_with_docker
#
#  pool:
#    vmImage: 'ubuntu-latest'
#  
#  steps:
#    - script: |
#        npm install
#        npm run jsdoc
#      target: node_slim
#      displayName: Generate JSDoc
#    
#    - script: |
#        zip -r JSDoc ./docs/JSDoc/*
#      displayName: Archive artifacts
#
#    - task: PublishBuildArtifacts@1
#      inputs:
#        pathToPublish: 'JSDoc.zip'
#        artifactName: 'JSDoc' 
#      displayName: Archive
#